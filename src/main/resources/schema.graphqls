type Query {
    train(trainNumber:Int, departureDate:Date): Train
}

type Train {
    cancelled                 : Boolean
    commuterLineid           : String
    deleted                   : Boolean
    departureDate            : Date
    #    operatorShortCode       : String
    #    operatorUicCode         : Int
    runningCurrently         : Boolean
    timetableAcceptanceDate : Date
    timetableType            : TimetableType
    #    trainCategoryId         : Int
    trainNumber              : Int
    #    trainTypeId             : Int
    version                   : String
    #    operator                  : Operator
    timeTableRows           : [TimeTableRow]
    #    train_locations           : [TrainLocation]
}

type TimeTableRow {
    stationShortCode: String
    stationUICCode: Int
    countryCode: String
    type: String
    trainStopping: Boolean
    commercialStop: Boolean
    commercialTrack: String
    cancelled: Boolean
    scheduledTime: DateTime
    causes: [Cause]

    id: Int
    trainNumber:Int
    departureDate:Date
}

type Cause {
    #    categoryCode: CategoryCode

    timeTableRowId: Int
    trainNumber:Int
    departureDate:Date
}

scalar Date
scalar DateTime

enum TimetableType {
    REGULAR,
    ADHOC
}
