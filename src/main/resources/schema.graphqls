type Query {
    train(trainNumber:Int, departureDate:Date): Train
    trainsGreaterThanVersion(version:String): [Train]
    trains(departureDate:Date): [Train]

    trainLocation(trainNumber:Int, departureDate:Date): [TrainLocation]

    composition(trainNumber:Int, departureDate:Date): Composition
    compositions(departureDate:Date): [Composition]
}

type Train {
    cancelled : Boolean
    commuterLineid : String
    deleted : Boolean
    departureDate : Date
    operatorShortCode : String
    # operatorUicCode : Int
    runningCurrently : Boolean
    timetableAcceptanceDate : DateTime
    timetableType : TimetableType
    # trainCategoryId : Int
    trainNumber : Int
    # trainTypeId : Int
    version : String
    operator : Operator
    timeTableRows : [TimeTableRow]
    trainLocations : [TrainLocation]
}

type TimeTableRow {
    stationShortCode: String
    stationUICCode: Int
    countryCode: String
    type: TimeTableRowType
    trainStopping: Boolean
    commercialStop: Boolean
    commercialTrack: String
    cancelled: Boolean
    scheduledTime: DateTime

    id: Int
    trainNumber:Int
    departureDate:Date

    causes: [Cause]
}

type Cause {
    # categoryCode: CategoryCode

    timeTableRowId: Int
    trainNumber:Int
    departureDate:Date
}

type Operator {
    operatorName : String
    operatorShortCode : String
    operatorUicCode : Int
}

type TrainLocation {
    departureDate : Date
    speed : Int
    timestamp : DateTime
    trainNumber : Int
    location : [Float]
}

type Composition {
    departureDate :Date
    trainNumber :Int
    operatorShortCode :String
    trainCategoryId :Int
    trainTypeId :Int
    version :String
    operatorUicCode :Int
    journeySections:[JourneySection]
}

type JourneySection {
    id : Int
    departureDate : Date
    trainNumber : Int
    beginTimeTableRowId : Int
    endTimeTableRowId : Int
    maximumSpeed : Int
    totalLength : Int
    locomotives : [Locomotive]
    #wagon : wagon[]
}

type Locomotive {
    id : Int
    location : Int
    locomotiveType : String
    powerTypeAbbreviation: String
    journeysectionId : Int
    vehicleNumber : String
}

scalar Date
scalar DateTime

enum TimetableType {
    REGULAR,
    ADHOC
}
enum TimeTableRowType {
    ARRIVAL
    DEPARTURE
}
