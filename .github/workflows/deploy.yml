name: Deploy
on:
  workflow_dispatch:
    inputs:
      env:
        description: "Environment"
        required: true
        type: environment
        default: "beta"
      commit-hash:
        description: "Commit hash/ECR image tag"
        required: true
        type: string
      config-repo-branch:
        description: "Config repo branch"
        default: master
        required: true
        type: string
jobs:
  deploy:
    if: github.repository != 'tmfg/digitraffic-rail-graphql'
    environment: ${{ github.event.inputs.env }}
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      contents: read
      actions: read
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: gh-actions-deploy-rail-graphql-${{ github.event.inputs.env }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Update GraphQL task definition
        uses: tmfg/digitraffic-actions@update-task-def/v2
        with:
          task-def-file-name: rail-${{ github.event.inputs.env }}-graphql
          family-name: digitraffic-graphql
          image-arn: ${{ secrets.ECR_URL }}/rata-graphql:${{ github.event.inputs.commit-hash }}
          aws-role: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          ci-repo-url: ${{ secrets.CONFIG_REPO_NAME }}
          ci-repo-branch: ${{ github.event.inputs.config-repo-branch }}
          ci-ssh-key: ${{ secrets.CONFIG_REPO_SSH_KEY }}
      - name: Update ECS service
        uses: tmfg/digitraffic-actions@ecs-service-update/v1
        with:
          aws-role: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          task-definition: digitraffic-graphql
          service-name: digitraffic-graphql
          cluster-name: ${{ secrets.CLUSTER_NAME }}
          desired-count: ${{ secrets.CONTAINER_COUNT }}
      - name: Notify Slack
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: FAILED Rail deploy GraphQL
          fields: repo, job, took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
